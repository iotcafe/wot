FORMAT: 1A
HOST: https://wot.vowstar.com/

# WoT API

WebAPI Of IoT

About HTTP status code, please see RFC 2616(RFC 2518/RFC 2817/RFC 2295/RFC 2774/RFC 4918).

# Group API for devices

## Create Device [/dev/create]

### POST ./dev/create [POST]

Create device by product ID, and get device ID.
Sub-product ID used for wechat application.

#### Errors

| HTTP Status | Result Code | Message                                 |
|-------------|:-----------:|----------------------------------------:|
| 400         | 10001       | Invalid parameters                      |
| 400         | 10002       | Invalid product ID                      |
| 400         | 10005       | Invalid request method                  |
| 400         | 20001       | Error gen dvid                          |
| 400         | 20002       | Error of DB                             |


+ Request (application/json)

    + Body

            {
                "productId": "WotP0123456789",
                "subProductId": "3707",
                "deviceMac": "18FE34010203",
                "devicePassword": "SomeRandomPasswordForDevice",
                "hardwareVersion":"1.0.0.0"
            }   


+ Response 200 (application/json)

    + Body

            {
                "result": 0,
                "deviceId": "WotD0123456789",
                "mpId": "gh_801b23c46162"
            }  
            
+ Response 400 (application/json)

    + Body
    
            {
                "result":10001,
                "message":"Invalid Parameters"
            }
            
## Delete Device [/dev/delete]
            
### POST ./dev/delete [POST]

Delete device by device ID and device password.

#### Errors

| HTTP Status | Result Code | Message                                 |
|-------------|:-----------:|----------------------------------------:|
| 400         | 10001       | Invalid parameters                      |
| 400         | 10003       | Invalid device ID                       |
| 400         | 10004       | Invalid device password                 |
| 400         | 20002       | Error of DB                             |


+ Request (application/json)

    + Body

            {
                "deviceId": "WotD0123456789",
                "devicePassword": "SomeRandomPasswordForDevice"
            } 


+ Response 200 (application/json)

    + Body

            {
                "result": 0
            }  

+ Response 400 (application/json)

    + Body

            {
                "result":10002,
                "message":"Invalid DeviceId"
            }
            
## Distribute Device [/dev/distribute]

### POST ./dev/distribute [POST]

Get M2M domain from cloud.

#### Errors

| HTTP Status | Result Code | Message                                 |
|-------------|:-----------:|----------------------------------------:|
| 400         | 10001       | Invalid parameters                      |
| 400         | 10003       | Invalid device ID                       |
| 400         | 10005       | Invalid request method                  |
| 400         | 20002       | Error of DB                             |

+ Request (application/json)

    + Body

            {
                "deviceId": "WotD0123456789"
            } 
            
+ Response 200 (application/json)

    + Body

            {
                "result": 0,
                "m2mHost":"s123456.m2m.mjyun.com",
                "m2mPort":3128
            }
            
+ Response 400 (application/json)

    + Body

            {
                "result":10002,
                "message":"Invalid DeviceId"
            }
            
## Device OTA [/dev/ota]

### POST ./dev/ota [POST]

Device get latest firmware from cloud.

#### Errors

| HTTP Status | Result Code | Message                                 |
|-------------|:-----------:|----------------------------------------:|
| 400         | 10001       | Invalid parameters                      |
| 400         | 10003       | Invalid device ID                       |
| 400         | 10005       | Invalid request method                  |
| 400         | 10007       | Invalid firmware ID                     |
| 400         | 20002       | Error of DB                             |

+ Request (application/json)

    + Body

            {
                "deviceId": "WotD0123456789",
                "devicePassword": "SomeRandomPasswordForDevice",
                "firmwareId":"WotF0123456789",
                "firmwareVersion":"1.0.0.0"
            } 
            
+ Response 200 (application/json)

    + Body

            {
                "result": 0,
                "needUpdate":1,
                "firmwareVersion":"1.0.0.1",
                "firmwareUrl":"http://download.wot.mjyun.com/xxxxxxx.bin",
                "firmwareMD5":"8c34d611f057adab20af1dde636be4bb"
            }

+ Response 200 (application/json)

    + Body 

            {
                "result": 0,
                "needUpdate":0
            }
            
+ Response 400 (application/json)

    + Body

            {
                "result":10002,
                "message":"Invalid DeviceId"
            }

## Bind Device [/dev/bind]

### POST ./dev/bind [POST]

Bind ONE Device by dvid and password.

#### Errors

| HTTP Status | Result Code | Message                                 |
|-------------|:-----------:|----------------------------------------:|
| 400         | 10001       | Invalid parameters                      |
| 400         | 10003       | Invalid device ID                       |
| 400         | 10004       | Invalid device password                 |
| 400         | 10005       | Invalid request method                  |
| 400         | 10014       | Invalid User ID                         |
| 400         | 10015       | Invalid Token                           |
| 400         | 20003       | Error of Redis                          |
| 400         | 20004       | Error of Db                             |

+ Request (application/json)

    + Body

            {
                "userId":"WotU0000000001",
                "token":"tkn_b3275960d68fda9d831facc0426c3bbc",
                "devices":[
                    {
                        "deviceId":"WotD0123456789",
                        "devicePassword":"DevicePasswd"
                    },
                    {
                        "deviceId":"WotD0123456788",
                        "devicePassword":"DevicePasswd"
                    }
                ]
            }

   
 
+ Response 200 (application/json)

    + Body 
 
            {
                "result":0,
                "success":[
                    "WotD0123456789",
                    "WotD0123456788"
                ],
                "failed":[
                    "WotD0123456789"
                ]
            }
       

+ Response 400 (application/json)

    + Body
    
            {
                "result": 10001,
                "message": "Invalid Parameters"
            }


## Unbind Device [/dev/unbind]

### POST ./dev/unbind [POST]

UnBind ONE Device by UserID/DeviceID.
 
#### Errors

| HTTP Status | Result Code | Message                                 |
|-------------|:-----------:|----------------------------------------:|
| 400         | 10001       | Invalid parameters                      |
| 400         | 10003       | Invalid device ID                       |
| 400         | 10005       | Invalid request method                  |
| 400         | 10014       | Invalid User ID                         |
| 400         | 10015       | Invalid Token                           |
| 400         | 20003       | Error of Redis                          |
| 400         | 20004       | Error of Db                             |

+ Request (application/json)

    + Body

            {
                "userId":"WotU0000000001",
                "token":"tkn_b3275960d68fda9d831facc0426c3bbc",
                "devices":[
                    {
                        "deviceId":"WotD0123456789"
                    },
                    {
                        "deviceId":"WotD0123456788"
                    }
                ]
            }

   
 
+ Response 200 (application/json)

    + Body 
        
            {
                "result":0,
                "success":[
                    "WotD0123456789",
                    "WotD0123456788"
                ],
                "failed":[
                    "WotD0123456789"
                ]
            }


+ Response 400 (application/json)

    + Body
    
            {
                "result": 10001,
                "message": "Invalid Parameters"
            }

# Group API for users

## Verification Over Telephone Voice Code [/user/verify/telephone]

### POST ./user/verify/telephone [POST]

Without code in JSON:
Get the verification code, used for register, change password or other Verification operation.

With code in JSON:
Verify this code.

#### Errors

| HTTP Status | Result Code | Message                                 |
|-------------|:-----------:|----------------------------------------:|
| 400         | 10001       | Invalid parameters                      |
| 400         | 10008       | Invalid Phone Number                    |
| 400         | 10017       | Invalid verification code               |
| 400         | 10009       | Too frequent to gen code in 60s         |
| 400         | 20003       | Error of Redis                          |
| 400         | 20004       | Error to Notice User                    |


+ Request (application/json)

    + Body

            {
                "phoneNumber": "13912344321"
            }
            
+ Request (application/json)

    + Body

            {
                "phoneNumber": "13912344321",
                "code": "123456"
            }

+ Response 200 (application/json)

    + Body 
        
            {
                "result": 0,
                "message": "Ok"
            }

+ Response 400 (application/json)

    + Body
    
            {
                "result": 10001,
                "message": "Invalid Parameters"
            }


## Verification Over SMS Code [/user/verify/sms]

### POST ./user/verify/sms [POST]

Without code in JSON:
Get the verification code, used for register, change password or other Verification operation.

With code in JSON:
Verify this code.

#### Errors

| HTTP Status | Result Code | Message                                 |
|-------------|:-----------:|----------------------------------------:|
| 400         | 10001       | Invalid parameters                      |
| 400         | 10008       | Invalid Phone Number                    |
| 400         | 10017       | Invalid verification code               |
| 400         | 10009       | Too frequent to gen code in 60s         |
| 400         | 20003       | Error of Redis                          |
| 400         | 20004       | Error to Notice User                    |


+ Request (application/json)

    + Body

            {
                "phoneNumber": "13912344321"
            }      
            
+ Response 200 (application/json)


    + Body 
        
            {
                "result": 0,
                "message": "Ok"
            }


+ Response 400 (application/json)

    + Body
    
            {
                "result": 10001,
                "message": "Invalid Parameters"
            }


## Verification Over email address [/user/verify/email]

### POST ./user/verify/email [POST]

Without code in JSON:
Get the verification code, used for register, change password or other Verification operation.

With code in JSON:
Verify this code.

#### Errors

| HTTP Status | Result Code | Message                                 |
|-------------|:-----------:|----------------------------------------:|
| 400         | 10001       | Invalid parameters                      |
| 400         | 10016       | Invalid Email address                   |
| 400         | 10017       | Invalid verification code               |
| 400         | 10009       | Too frequent to gen code in 60s         |
| 400         | 20003       | Error of Redis                          |
| 400         | 20004       | Error to Notice User                    |

            
+ Request (application/json)

    + Body

            {
                "email": "someone@mjyun.com"
            }
    
+ Response 200 (application/json)

    + Body 
        
            {
                "result": 0,
                "message": "Ok"
            }

+ Response 400 (application/json)

    + Body
    
            {
                "result": 10001,
                "message": "Invalid Parameters"
            }


            
## Check User Token [/user/verify/token]

### POST ./user/verify/token [POST]

Check the token is valid?

#### Errors

| HTTP Status | Result Code | Message                                 |
|-------------|:-----------:|----------------------------------------:|
| 400         | 10001       | Invalid parameters                      |
| 400         | 10005       | Invalid token                           |


+ Request (application/json)

    + Body

            {
                "userId": "WotU0000000001",
                "token":"tkn_b3275960d68fda9d831facc0426c3bbc"
            }
    
+ Response 200 (application/json)

    + Body 
        
            {
                "result": 0,
                "userId": "WotU0000000001",
                "token":"tkn_b3275960d68fda9d831facc0426c3bbc"
            }

+ Response 400 (application/json)

    + Body
    
            {
                "result": 10001,
                "message": "Invalid Parameters"
            }
            
            
## User Register [/user/register]

### POST ./user/register [POST]

Register user by phonenum/password/code, get the userid. We also use to change the password, to avoid this: 
 -One user's phone has been registered, but he/she forgot. 
 -He/she execute the register process, but get PHONE HAS REGISTERED at the last step.
 -This would be Unfriendly. 

First step is call other interface to get the verification code.

#### Errors

| HTTP Status | Result Code | Message                                 |
|-------------|:-----------:|----------------------------------------:|
| 400         | 10001       | Invalid parameters                      |
| 400         | 10008       | Invalid Phone Number                    |
| 400         | 10010       | Invalid Verifaction Code                |
| 400         | 10011       | Invalid User Password                   |
| 400         | 20003       | Error of Redis                          |
| 400         | 20004       | Error of Db                             |


+ Request (application/json)

    + Body

            {
                "phoneNumber": "13912344321",
                "code": "778623",
                "password": "UserPasswd"
            }
    
+ Response 200 (application/json)

    + Body 
        
            {
                "result": 0,
                "userId": "WotU0000000001",
                "token": "tkn_b3275960d68fda9d831facc0426c3bbc"
            }

+ Response 400 (application/json)

    + Body
    
            {
                "result": 10001,
                "message": "Invalid Parameters"
            }

## User Login [/user/login]

### POST ./user/login [POST]

User login by phone and password, get the userid

#### Errors

| HTTP Status | Result Code | Message                                 |
|-------------|:-----------:|----------------------------------------:|
| 400         | 10001       | Invalid parameters                      |
| 400         | 10008       | Invalid Phone Number                    |
| 400         | 10011       | Invalid User Password                   |
| 400         | 10012       | Unmatched User Password                 |
| 400         | 10013       | Unregisted Phone                        |
| 400         | 20003       | Error of Redis                          |
| 400         | 20004       | Error of Db                             |


+ Request (application/json)

    + Body

            {
                "phoneNumber": "13912344321",
                "password": "UserPasswd"
            }
    
+ Response 200 (application/json)

    + Body 
        
            {
                "result": 0,
                "userId": "WotU0000000001",
                "token":"tkn_b3275960d68fda9d831facc0426c3bbc"
            }

+ Response 400 (application/json)

    + Body
    
            {
                "result": 10001,
                "message": "Invalid Parameters"
            }


## List Bound Devices [/user/devlist]
### POST ./user/devlist [POST]

Get devices list under the user.

#### Errors

| HTTP Status | Result Code | Message                                 |
|-------------|:-----------:|----------------------------------------:|
| 400         | 10001       | Invalid parameters                      |
| 400         | 10003       | Invalid device ID                       |
| 400         | 10005       | Invalid request method                  |
| 400         | 10014       | Invalid User ID                         |
| 400         | 10015       | Invalid Token                           |
| 400         | 20003       | Error of Redis                          |
| 400         | 20004       | Error of Db                             |
| 400         | 30001       | Device Has Binded                       |

+ Request (application/json)

    + Body

            {
                "userId": "WotU0000000001",
                "token":"tkn_b3275960d68fda9d831facc0426c3bbc"
            }
    
+ Response 200 (application/json)

    + Body 
        
            {
                "result": 0,
                "devices":[
                    {
                        "productId": "WotP0123456789",
                        "subProductId": "3707",
                        "deviceId":"WotD0000000001",
                        "state":"{}",
                        "type":"light",
                        "isOnline":"yes",
                        "name":"bath-light"
                    },
                    {
                        "productId": "WotP0123456789",
                        "subProductId": "3708",
                        "deviceId":"WotD0000000002",
                        "state":"{}",
                        "type":"light",
                        "isOnline":"no",
                        "name":"bedroom-light"
                    }
                ]
            }

+ Response 400 (application/json)

    + Body
    
            {
                "result": 10001,
                "message": "Invalid Parameters"
            }
 
# Group Rules

## Naming Rules

### Rules for naming ProductId and DeviceId

| Name       | explain             | Length | example        | limit                 |
|------------|:-------------------:|-------:|---------------:|----------------------:|
| ProductId  | "WotP"+ Digit(10)   | 14     | WotP0123456789 | max digit:2147483647  | 
| DeviceId   | "WotD"+ Digit(10)   | 14     | WotD0123456789 | max digit:4294967295  |
| FirmwareId | "WotF"+ Digit(10)   | 14     | WotF0123456789 | max digit:2147483647  |

When there are more than 4294967295 devices, we can use other Prefix for DeviceId   

### Rules for naming JSON Data and any other objects

We using Camel-Case for JSON object naming.

| Type        | Naming rule         | example                 |
|-------------|:-------------------:|------------------------:|
| JSON Data   | lowerCamelCase      | productId               | 
| Class       | UpperCamelCase      | TestClass               | 
| Variable    | lowerCamelCase      | testVariable            | 
| Method      | lowerCamelCase      | testMethod()            | 
| Function    | lowerCamelCase      | testFunction()          |

Special rules

ID, MAC, UDP, TCP, etc., applied CamelCase, convert to Id, Mac, Udp, Tcp and so on.
        
## Request Rules

Allow: 0,GET 1,HEAD 2,PUT 3,DELETE 4,POST 5,OPTIONS

| Request     | Operation      | Note                    |
|-------------|:--------------:|------------------------:|
| GET         | Read           | Read                    | 
| HEAD        | Read Header    | Read header, probe      | 
| PUT         | Update/Write   | Update                  | 
| DELETE      | Delete         | Delete                  | 
| POST        | Create/Write   | Create or update        |
| OPTIONS     | Read Options   | Read options, probe     |

## Result Code

| HTTP Status | Result Code | Message                                 |
|-------------|:-----------:|----------------------------------------:|
| 200         | 0           | OK                                      |
| 400         | 10001       | Invalid parameters                      |
| 400         | 10002       | Invalid product ID                      |
| 400         | 10003       | Invalid device ID                       |
| 400         | 10004       | Invalid device password                 |
| 400         | 10005       | Invalid request method                  |
| 400         | 10006       | Missing request parameters              |
| 400         | 10007       | Invalid firmware ID                     |
| 400         | 10008       | Invalid Phone Number                    |
| 400         | 10009       | Too frequent to gen code in 60s         |
| 400         | 10010       | Invalid Verifaction Code                |
| 400         | 10011       | Invalid User Password                   |
| 400         | 10012       | Unmatched User Password                 |
| 400         | 10013       | Unregisted Phone                        |
| 400         | 10014       | Invalid User ID                         |
| 400         | 10015       | Invalid Token                           |
| 400         | 10016       | Invalid Email address                   |
| 400         | 10017       | Invalid verification code               |
| 400         | 20001       | Error gen dvid                          |
| 400         | 20002       | Error of DB                             |
| 400         | 20003       | Error of Redis                          |
| 400         | 20004       | Error to Notice User                    |
| 400         | 20005       | Error unknown                           |